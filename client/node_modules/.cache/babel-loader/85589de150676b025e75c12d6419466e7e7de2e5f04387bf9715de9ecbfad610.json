{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const fetchProducts = createAsyncThunk(\"quotes/fetchRandomQuote\", async () => {\n  const response = await fetch(\"\");\n  const data = await response.json();\n  return data;\n});\nconst fetchProductsPending = state => {\n  state.isLoading = true;\n};\nconst fetchProductsFulfilled = (state, action) => {\n  state.isLoading = false;\n};\nconst fetchProductsRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.error.message;\n};\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, fetchProductsPending);\n    builder.addCase(fetchProducts.fulfilled, fetchProductsFulfilled);\n    builder.addCase(fetchProducts.rejected, fetchProductsRejected);\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchProducts","response","fetch","data","json","fetchProductsPending","state","isLoading","fetchProductsFulfilled","action","fetchProductsRejected","error","message","productsSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","fulfilled","rejected","reducer"],"sources":["C:/Users/ICH/Documents/project/React/Pet-Shop-Projekt/client/src/redux/slices/productsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"quotes/fetchRandomQuote\",\r\n  async () => {\r\n    const response = await fetch(\"\");\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nconst fetchProductsPending = (state) => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst fetchProductsFulfilled = (state, action) => {\r\n  state.isLoading = false;\r\n};\r\n\r\nconst fetchProductsRejected = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.error.message;\r\n};\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: [],\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProducts.pending, fetchProductsPending);\r\n    builder.addCase(fetchProducts.fulfilled, fetchProductsFulfilled);\r\n    builder.addCase(fetchProducts.rejected, fetchProductsRejected);\r\n  },\r\n});\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,yBAAyB,EACzB,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,EAAE,CAAC;EAChC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CACF,CAAC;AAED,MAAME,oBAAoB,GAAIC,KAAK,IAAK;EACtCA,KAAK,CAACC,SAAS,GAAG,IAAI;AACxB,CAAC;AAED,MAAMC,sBAAsB,GAAGA,CAACF,KAAK,EAAEG,MAAM,KAAK;EAChDH,KAAK,CAACC,SAAS,GAAG,KAAK;AACzB,CAAC;AAED,MAAMG,qBAAqB,GAAGA,CAACJ,KAAK,EAAEG,MAAM,KAAK;EAC/CH,KAAK,CAACC,SAAS,GAAG,KAAK;EACvBD,KAAK,CAACK,KAAK,GAAGF,MAAM,CAACE,KAAK,CAACC,OAAO;AACpC,CAAC;AAED,MAAMC,aAAa,GAAGd,WAAW,CAAC;EAChCe,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACnB,aAAa,CAACoB,OAAO,EAAEf,oBAAoB,CAAC;IAC5Da,OAAO,CAACC,OAAO,CAACnB,aAAa,CAACqB,SAAS,EAAEb,sBAAsB,CAAC;IAChEU,OAAO,CAACC,OAAO,CAACnB,aAAa,CAACsB,QAAQ,EAAEZ,qBAAqB,CAAC;EAChE;AACF,CAAC,CAAC;AAEF,eAAeG,aAAa,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}